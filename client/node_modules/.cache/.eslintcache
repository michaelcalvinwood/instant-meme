[{"/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/index.js":"1","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/App.js":"2","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/reportWebVitals.js":"3","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/InstantMeme/InstantMeme.js":"4","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/MenuScreen/MenuScreen.js":"5","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/Jokeme/Jokeme.js":"6","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/CustomMeme/CustomMeme.js":"7"},{"size":500,"mtime":1646952836157,"results":"8","hashOfConfig":"9"},{"size":1204,"mtime":1646973777400,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1646952836158,"results":"11","hashOfConfig":"9"},{"size":2063,"mtime":1646970259867,"results":"12","hashOfConfig":"9"},{"size":661,"mtime":1646970815911,"results":"13","hashOfConfig":"9"},{"size":2325,"mtime":1646973200417,"results":"14","hashOfConfig":"9"},{"size":205,"mtime":1646973673140,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bi1moq",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/index.js",[],[],"/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/App.js",["41","42"],[],"import logo from './logo.svg';\nimport './App.css';\nimport InstantMeme from './components/InstantMeme/InstantMeme';\nimport MenuScreen from './components/MenuScreen/MenuScreen';\nimport Jokeme from './components/Jokeme/Jokeme';\nimport CustomMeme from './components/CustomMeme/CustomMeme';\nimport { Component } from 'react';\n\nclass App extends Component {\n  state = {\n    page: 'menuScreen',\n  }\n\n  switchPage = (page) => {\n    this.setState({\n      page: page,\n    })\n  }\n\n  render() {\n    switch (this.state.page) {\n      case 'menuScreen':\n        return (\n          <div className=\"App\">\n            <MenuScreen switchPage={this.switchPage}/>\n          </div>\n        );\n      case 'instantMeme': {\n        return (\n          <div className=\"App\">\n            <InstantMeme switchPage={this.switchPage}/>\n          </div>\n        );\n      }\n      case 'jokeme': {\n        return (\n          <div className=\"App\">\n            <Jokeme switchPage={this.switchPage}/>\n          </div>\n        );\n      }\n      case 'customMeme': {\n        return (\n          <div className=\"App\">\n            <CustomMeme switchPage={this.switchPage}/>\n          </div>\n        );\n      }\n    }\n    \n  }\n}\n\nexport default App;\n","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/reportWebVitals.js",[],[],"/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/InstantMeme/InstantMeme.js",["43"],[],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport meme from \"../../assets/images/meme.jpg\"\nimport './InstantMeme.scss';\n\nexport class InstantMeme extends Component {\n\n    state = {\n        meme: meme,\n        defaultMemes: JSON.parse(localStorage.getItem('defaultMemes')) || null\n    }\n\n    randomNumber = max => {\n        return Math.floor(Math.random() * max);\n    }\n\n    setMeme = (meme) => {\n        this.setState ({\n            meme: meme,\n        });\n        \n    }\n\n    getInstantMeme = (top, bottom, meme, fontSize = '40', font = 'Impact') => {\n        bottom=\"one\\ntwo\";\n        const request = {\n            url: 'http://localhost:8080/meme',\n            method: 'post',\n            data: {\n                top: top,\n                bottom: bottom,\n                meme: meme,\n                fontSize: fontSize,\n                font: font,\n            }\n        }\n\n        axios(request)\n        .then (response => {\n            console.log (response.data);\n            this.setMeme(response.data.url);\n        })\n        .catch (error => {\n\n        })\n    }\n    \n    handleForm = (e) => {\n      e.preventDefault();\n      const top = e.target.topText.value;\n      const bottom = e.target.bottomText.value;\n      const selected = this.randomNumber(this.state.defaultMemes.length);\n\n      this.getInstantMeme(top, bottom, this.state.defaultMemes[selected]);\n    }\n\n  render() {\n      if (!this.state.defaultMemes) {\n          this.getImages();\n          return;\n      }\n\n    return (\n      <div>\n          <p>{this.state.defaultMemes.length}</p>\n          <form onSubmit={this.handleForm}>\n              <label>\n                  <p>Top Text</p>\n                  <input type=\"text\" name=\"topText\"></input>\n              </label>\n              <label>\n                  <p>Bottom Text</p>\n                  <input type=\"text\" name=\"bottomText\"></input>\n              </label>\n              <button>InstantMeme</button>\n          </form>\n          <img src={this.state.meme}/>\n      </div>\n    )\n  }\n}\n\nexport default InstantMeme",["44","45"],"/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/MenuScreen/MenuScreen.js",[],[],"/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/Jokeme/Jokeme.js",["46"],[],"import React, { Component } from 'react';\nimport './Jokeme.scss';\nimport axios from 'axios';\nimport meme from \"../../assets/images/meme.jpg\"\n\n\nclass Jokeme extends Component {\n    state = {\n        meme: meme,\n        defaultMemes: JSON.parse(localStorage.getItem('defaultMemes')) || null\n    }\n\n    randomNumber = max => {\n        return Math.floor(Math.random() * max);\n    }\n\n    setMeme = (meme) => {\n        this.setState ({\n            meme: meme,\n        });\n        \n    }\n\n    getInstantMeme = (top, bottom, meme, fontSize = '40', font = 'Impact') => {\n       \n        const request = {\n            url: 'http://localhost:8080/jokeme',\n            method: 'get',\n            params: {\n                top: top,\n                bottom: bottom,\n                meme: meme,\n                fontSize: fontSize,\n                font: font,\n            }\n        }\n\n        axios(request)\n        .then (response => {\n            console.log (response.data);\n            this.setMeme(response.data.url);\n        })\n        .catch (error => {\n\n        })\n    }\n    \n    handleForm = (e) => {\n      e.preventDefault();\n      const top = \"top\";\n      const selected = this.randomNumber(this.state.defaultMemes.length);\n\n      const request = {\n          url: \"https://api.jokes.one/joke/random\",\n          method: \"get\",\n          headers: {\n              \"X-JokesOne-Api-Secret\": \"enhsxyKbfvDs3NM4GUK7sAeF\",\n              \"accept\": \"application/json\",\n              \"content-type\": \"application/json\"\n          }\n      }\n\n      axios(request)\n      .then(response => {\n          const joke = response.data.contents.jokes[0].text;\n          this.getInstantMeme(top, joke, this.state.defaultMemes[selected], \"16\");\n      })\n      .catch(error => {\n\n      })\n    \n    }\n\n  render() {\n      if (!this.state.defaultMemes) {\n          this.getImages();\n          return;\n      }\n\n    return (\n      <div className=\"jokeme\">\n          <p>{this.state.defaultMemes.length}</p>\n          <form onSubmit={this.handleForm}>\n              <label>\n                  <p>Top Text</p>\n                  <input type=\"text\" name=\"topText\"></input>\n              </label>\n              <button>InstantMeme</button>\n          </form>\n          <img className=\"jokeme__meme\" src={this.state.meme}/>\n      </div>\n    )\n  }\n}\n\nexport default Jokeme","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/CustomMeme/CustomMeme.js",[],[],{"ruleId":"47","severity":1,"message":"48","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":12},{"ruleId":"51","severity":1,"message":"52","line":21,"column":5,"nodeType":"53","messageId":"54","endLine":49,"endColumn":6},{"ruleId":"55","severity":1,"message":"56","line":77,"column":11,"nodeType":"57","endLine":77,"endColumn":39},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"55","severity":1,"message":"56","line":90,"column":11,"nodeType":"57","endLine":90,"endColumn":64},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-global-assign","no-unsafe-negation"]