[{"/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/index.js":"1","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/App.js":"2","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/reportWebVitals.js":"3","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/InstantMeme/InstantMeme.js":"4","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/MenuScreen/MenuScreen.js":"5","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/Jokeme/Jokeme.js":"6","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/CustomMeme/CustomMeme.js":"7","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/DropZone/DropZone.js":"8"},{"size":500,"mtime":1646952836157,"results":"9","hashOfConfig":"10"},{"size":1310,"mtime":1646974829034,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1646952836158,"results":"12","hashOfConfig":"10"},{"size":2036,"mtime":1646975978692,"results":"13","hashOfConfig":"10"},{"size":661,"mtime":1646970815911,"results":"14","hashOfConfig":"10"},{"size":2325,"mtime":1646973200417,"results":"15","hashOfConfig":"10"},{"size":205,"mtime":1646973673140,"results":"16","hashOfConfig":"10"},{"size":1772,"mtime":1646974746172,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"bi1moq",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"21"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/index.js",[],[],["45","46"],"/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/App.js",["47","48","49"],[],"/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/reportWebVitals.js",[],[],"/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/InstantMeme/InstantMeme.js",["50"],[],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport meme from \"../../assets/images/meme.jpg\"\nimport './InstantMeme.scss';\n\nexport class InstantMeme extends Component {\n\n    state = {\n        meme: meme,\n        defaultMemes: JSON.parse(localStorage.getItem('defaultMemes')) || null\n    }\n\n    randomNumber = max => {\n        return Math.floor(Math.random() * max);\n    }\n\n    setMeme = (meme) => {\n        this.setState ({\n            meme: meme,\n        });\n        \n    }\n\n    getInstantMeme = (top, bottom, meme, fontSize = '40', font = 'Impact') => {\n        const request = {\n            url: 'http://localhost:8080/meme',\n            method: 'post',\n            data: {\n                top: top,\n                bottom: bottom,\n                meme: meme,\n                fontSize: fontSize,\n                font: font,\n            }\n        }\n\n        axios(request)\n        .then (response => {\n            console.log (response.data);\n            this.setMeme(response.data.url);\n        })\n        .catch (error => {\n\n        })\n    }\n    \n    handleForm = (e) => {\n      e.preventDefault();\n      const top = e.target.topText.value;\n      const bottom = e.target.bottomText.value;\n      const selected = this.randomNumber(this.state.defaultMemes.length);\n\n      this.getInstantMeme(top, bottom, this.state.defaultMemes[selected]);\n    }\n\n  render() {\n      if (!this.state.defaultMemes) {\n          this.getImages();\n          return;\n      }\n\n    return (\n      <div>\n          <p>{this.state.defaultMemes.length}</p>\n          <form onSubmit={this.handleForm}>\n              <label>\n                  <p>Top Text</p>\n                  <input type=\"text\" name=\"topText\"></input>\n              </label>\n              <label>\n                  <p>Bottom Text</p>\n                  <input type=\"text\" name=\"bottomText\"></input>\n              </label>\n              <button>InstantMeme</button>\n          </form>\n          <img src={this.state.meme}/>\n      </div>\n    )\n  }\n}\n\nexport default InstantMeme","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/MenuScreen/MenuScreen.js",[],[],"/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/Jokeme/Jokeme.js",["51"],[],"import React, { Component } from 'react';\nimport './Jokeme.scss';\nimport axios from 'axios';\nimport meme from \"../../assets/images/meme.jpg\"\n\n\nclass Jokeme extends Component {\n    state = {\n        meme: meme,\n        defaultMemes: JSON.parse(localStorage.getItem('defaultMemes')) || null\n    }\n\n    randomNumber = max => {\n        return Math.floor(Math.random() * max);\n    }\n\n    setMeme = (meme) => {\n        this.setState ({\n            meme: meme,\n        });\n        \n    }\n\n    getInstantMeme = (top, bottom, meme, fontSize = '40', font = 'Impact') => {\n       \n        const request = {\n            url: 'http://localhost:8080/jokeme',\n            method: 'get',\n            params: {\n                top: top,\n                bottom: bottom,\n                meme: meme,\n                fontSize: fontSize,\n                font: font,\n            }\n        }\n\n        axios(request)\n        .then (response => {\n            console.log (response.data);\n            this.setMeme(response.data.url);\n        })\n        .catch (error => {\n\n        })\n    }\n    \n    handleForm = (e) => {\n      e.preventDefault();\n      const top = \"top\";\n      const selected = this.randomNumber(this.state.defaultMemes.length);\n\n      const request = {\n          url: \"https://api.jokes.one/joke/random\",\n          method: \"get\",\n          headers: {\n              \"X-JokesOne-Api-Secret\": \"enhsxyKbfvDs3NM4GUK7sAeF\",\n              \"accept\": \"application/json\",\n              \"content-type\": \"application/json\"\n          }\n      }\n\n      axios(request)\n      .then(response => {\n          const joke = response.data.contents.jokes[0].text;\n          this.getInstantMeme(top, joke, this.state.defaultMemes[selected], \"16\");\n      })\n      .catch(error => {\n\n      })\n    \n    }\n\n  render() {\n      if (!this.state.defaultMemes) {\n          this.getImages();\n          return;\n      }\n\n    return (\n      <div className=\"jokeme\">\n          <p>{this.state.defaultMemes.length}</p>\n          <form onSubmit={this.handleForm}>\n              <label>\n                  <p>Top Text</p>\n                  <input type=\"text\" name=\"topText\"></input>\n              </label>\n              <button>InstantMeme</button>\n          </form>\n          <img className=\"jokeme__meme\" src={this.state.meme}/>\n      </div>\n    )\n  }\n}\n\nexport default Jokeme","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/CustomMeme/CustomMeme.js",[],[],"/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/DropZone/DropZone.js",[],[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":1,"column":8,"nodeType":"58","messageId":"59","endLine":1,"endColumn":12},{"ruleId":"56","severity":1,"message":"60","line":6,"column":8,"nodeType":"58","messageId":"59","endLine":6,"endColumn":18},{"ruleId":"61","severity":1,"message":"62","line":22,"column":5,"nodeType":"63","messageId":"64","endLine":51,"endColumn":6},{"ruleId":"65","severity":1,"message":"66","line":76,"column":11,"nodeType":"67","endLine":76,"endColumn":39},{"ruleId":"65","severity":1,"message":"66","line":90,"column":11,"nodeType":"67","endLine":90,"endColumn":64},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'CustomMeme' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]