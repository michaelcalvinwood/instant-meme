[{"/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/index.js":"1","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/App.js":"2","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/reportWebVitals.js":"3","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/InstantMeme/InstantMeme.js":"4","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/MenuScreen/MenuScreen.js":"5","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/Jokeme/Jokeme.js":"6","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/CustomMeme/CustomMeme.js":"7","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/DropZone/DropZone.js":"8","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/Header/Header.js":"9"},{"size":500,"mtime":1646952836157,"results":"10","hashOfConfig":"11"},{"size":1029,"mtime":1647022861768,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1646952836158,"results":"13","hashOfConfig":"11"},{"size":2865,"mtime":1647028632395,"results":"14","hashOfConfig":"11"},{"size":830,"mtime":1647022483648,"results":"15","hashOfConfig":"11"},{"size":7085,"mtime":1647028173286,"results":"16","hashOfConfig":"11"},{"size":3277,"mtime":1647028812464,"results":"17","hashOfConfig":"11"},{"size":1772,"mtime":1646974746172,"results":"18","hashOfConfig":"11"},{"size":355,"mtime":1647028163525,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"bi1moq",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},"/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/index.js",[],[],["55","56"],"/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/App.js",["57","58","59"],[],"import logo from './logo.svg';\nimport './App.css';\nimport InstantMeme from './components/InstantMeme/InstantMeme';\nimport MenuScreen from './components/MenuScreen/MenuScreen';\nimport Jokeme from './components/Jokeme/Jokeme';\nimport CustomMeme from './components/CustomMeme/CustomMeme';\nimport { Component } from 'react';\nimport DropzoneComponent from './components/DropZone/DropZone';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport Header from './components/Header/Header';\n\nclass App extends Component {\n  state = {\n    page: 'menuScreen',\n  }\n\n  switchPage = (page) => {\n    this.setState({\n      page: page,\n    })\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\" exact component={MenuScreen} />\n          <Route path=\"/instant-meme\" component={InstantMeme} />\n          <Route path=\"/jokeme\" component={Jokeme} />\n          <Route path=\"/custom-meme\" component={CustomMeme} />\n        </Switch>\n      </BrowserRouter>\n    )    \n  }\n}\n\nexport default App;\n",["60","61"],"/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/reportWebVitals.js",[],[],"/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/InstantMeme/InstantMeme.js",["62","63"],[],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport meme from \"../../assets/images/transparent-meme-sized.png\"\nimport './InstantMeme.scss';\nimport background from \"../../assets/images/meme-background-sized.jpg\";\nimport Header from '../Header/Header';\nexport class InstantMeme extends Component {\n\n    state = {\n        meme: meme,\n        defaultMemes: JSON.parse(localStorage.getItem('defaultMemes')) || null\n    }\n\n    randomNumber = max => {\n        return Math.floor(Math.random() * max);\n    }\n\n    setMeme = (meme) => {\n        this.setState({\n            meme: meme,\n        });\n\n    }\n\n    getInstantMeme = (top, bottom, meme, fontSize = '40', font = 'Impact') => {\n        const request = {\n            url: 'http://localhost:8080/meme',\n            method: 'post',\n            data: {\n                top: top,\n                bottom: bottom,\n                meme: meme,\n                fontSize: fontSize,\n                font: font,\n            }\n        }\n\n        axios(request)\n            .then(response => {\n                console.log(response.data);\n                this.setMeme(response.data.url);\n            })\n            .catch(error => {\n\n            })\n    }\n\n    handleForm = (e) => {\n        e.preventDefault();\n        const top = e.target.topText.value;\n        const bottom = e.target.bottomText.value;\n        const selected = this.randomNumber(this.state.defaultMemes.length);\n\n        this.getInstantMeme(top, bottom, this.state.defaultMemes[selected]);\n    }\n\n    reset = e => {\n        e.preventDefault();\n        console.log(e.target);\n        // e.target.reset();\n    }\n\n    render() {\n        if (!this.state.defaultMemes) {\n            this.getImages();\n            return;\n        }\n\n        return (\n            <>\n            <Header />\n                <div className=\"instant\">\n                    <img className=\"instant__background\" src={background} />\n                    <div className=\"instant__container\">\n                        <form className=\"instant__form\" onSubmit={this.handleForm} onClick={this.reset}>\n                            <label>\n                                <p>Top Text</p>\n                                <input className=\"instant__input\" type=\"text\" name=\"topText\"></input>\n                            </label>\n                            <label>\n                                <p>Bottom Text</p>\n                                <input className='instant__input' type=\"text\" name=\"bottomText\"></input>\n                            </label>\n                            <button className=\"instant__meme-button\">InstantMeme</button>             \n\n                        </form>\n                        <img className=\"instant__meme\" src={this.state.meme} />\n\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default InstantMeme",["64","65"],"/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/MenuScreen/MenuScreen.js",[],[],"/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/Jokeme/Jokeme.js",["66","67","68"],[],"import React, { Component } from 'react';\nimport './Jokeme.scss';\nimport axios from 'axios';\nimport meme from \"../../assets/images/transparent-meme-sized.png\"\nimport background from \"../../assets/images/meme-background-sized.jpg\";\nimport censoredBanana from \"../../assets/images/censored-banana-sized.jpg\";\nimport Header from '../Header/Header';\n\n\nclass Jokeme extends Component {\n    constructor() {\n        super();\n        this.page = 1;\n        this.categories = JSON.parse(localStorage.getItem('jokeCategories')) || [];\n        if (!this.categories.length) {\n            this.interval = setInterval(this.uploadCategories, 500);\n        }\n        this.nsfwCategories = ['asians', 'sex', 'dirty-jokes', 'latinos'];\n    }\n\n    state = {\n        meme: meme,\n        defaultMemes: JSON.parse(localStorage.getItem('defaultMemes')) || null,\n        categories: JSON.parse(localStorage.getItem('jokeCategories')) || null,\n        selectedCategory: 'any',\n        nsfw: false,\n    }\n\n    randomNumber = max => {\n        return Math.floor(Math.random() * max);\n    }\n\n    setMeme = (meme) => {\n        this.setState({\n            meme: meme,\n        });\n\n    }\n\n    sortedUniqueArray = array => {\n        const tmpArray = array.sort();\n        let newArray = [];\n        let curValue = null;\n        for (let i = 0; i < tmpArray.length; ++i) {\n            if (tmpArray[i] !== curValue && tmpArray[i] !== 'asians') newArray.push(tmpArray[i]);\n            curValue = tmpArray[i];\n        }\n\n        return newArray;\n    }\n\n    getInstantMeme = (top, bottom, meme, fontSize = '40', font = 'Impact') => {\n\n        const request = {\n            url: 'http://localhost:8080/jokeme',\n            method: 'get',\n            params: {\n                top: top,\n                bottom: bottom,\n                meme: meme,\n                fontSize: fontSize,\n                font: font,\n            }\n        }\n\n        axios(request)\n            .then(response => {\n                console.log(response.data);\n                this.setMeme(response.data.url);\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    getCategories(start = 1) {\n        const request = {\n            url: \"https://api.jokes.one/joke/categories/search\",\n            method: 'get',\n            headers: {\n                \"Accept\": \"application/json\",\n                'X-JokesOne-Api-Secret': \"enhsxyKbfvDs3NM4GUK7sAeF\",\n            },\n            params: {\n                query: \"\",\n                start: start\n            }\n\n        }\n        axios(request)\n            .then(response => {\n                const categories = response.data.contents.categories;\n                let filteredCategories = [];\n                if (categories !== null) {\n                    filteredCategories = categories.map(category => category.name);\n                    if (filteredCategories !== null) {\n                        filteredCategories.forEach(category => {\n                            console.log('getCategories category', category);\n                            this.categories.push(category);\n                        });\n                    }\n                }\n                console.log(\"categories\", this.categories);\n            })\n            .catch(error => {\n                console.log('getCategories error', error);\n            });\n    }\n\n    handleForm = (e) => {\n        e.preventDefault();\n        const selectedCategory = e.target.categories.value;\n\n\n        const top = \"top\";\n        const selected = this.randomNumber(this.state.defaultMemes.length);\n\n        const request = {\n            url: \"https://api.jokes.one/joke/random\",\n            method: \"get\",\n            headers: {\n                \"X-JokesOne-Api-Secret\": \"enhsxyKbfvDs3NM4GUK7sAeF\",\n                \"accept\": \"application/json\",\n                \"content-type\": \"application/json\"\n            }\n        }\n\n        axios(request)\n            .then(response => {\n                const joke = response.data.contents.jokes[0].text;\n\n                const isNsfw = this.nsfwCategories.find(category => category === selectedCategory);\n                if (isNsfw) {\n                    this.setState({\n                        selectedCategory: selectedCategory,\n                        nsfw: true\n                    });\n                } else {\n                    this.setState({\n                        selectedCategory: selectedCategory,\n                        nsfw: false\n                    });\n                }\n\n                this.getInstantMeme(top, joke, this.state.defaultMemes[selected], \"16\");\n\n            })\n            .catch(error => {\n                console.log(error)\n            });\n\n    }\n\n    uploadCategories = () => {\n        console.log(\"uploadCategories\", this.page);\n        if (this.page < 55) {\n            this.getCategories(this.page++);\n        } else {\n            clearInterval(this.interval);\n            this.categories = this.sortedUniqueArray(this.categories);\n            localStorage.setItem('jokeCategories', JSON.stringify(this.categories));\n            this.setState({\n                categories: this.categories,\n            })\n\n        }\n    }\n\n    turnOffNsfw = () => {\n        this.setState({\n            nsfw: false\n        })\n    }\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        if (!this.state.defaultMemes) {\n            this.getImages();\n            return;\n        }\n\n        /*\n         <select>\n              {options.map((option) => (\n                <option value={option.value}>{option.label}</option>\n              ))}\n            </select>\n          */\n\n        return (\n            <>\n                <Header />\n                <div className=\"jokeme\">\n                    <img className=\"jokeme__background\" src={background} />\n                    <div className=\"instant__container\">\n                        <form className='jokeme__form' onSubmit={this.handleForm}>\n                            {/* <label className=\"switch\">\n                            <input name=\"nsfw\" type=\"checkbox\" />\n                            <span className=\"slider round\"></span>\n                        </label> */}\n                            <select className='jokeme__select' name='categories'>\n                                <option value={\"any\"}>{\"Any\"}</option>\n                                {\n                                    this.state.categories.map((category) => {\n                                        return <option value={category}>{category}</option>\n                                    })\n                                }\n                            </select>\n                            <button className='jokeme__button'>Jokeme</button>\n                        </form>\n                        {this.state.nsfw ?\n                            <img className=\"jokeme__meme\" src={censoredBanana} onClick={this.turnOffNsfw} /> :\n                            <img className=\"jokeme__meme\" src={this.state.meme} />}\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default Jokeme","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/CustomMeme/CustomMeme.js",["69","70","71"],[],"import React, { Component } from 'react';\nimport axios from 'axios';\n// import meme from \"../../assets/images/meme.jpg\"\nimport meme from \"../../assets/images/transparent-meme-sized.png\"\nimport './CustomMeme.scss';\nimport background from \"../../assets/images/meme-background-sized.jpg\";\nimport imageList from \"../../assets/data/imageList.json\";\nimport star from \"../../assets/images/star.svg\"\nimport Header from '../Header/Header';\nexport class customMeme extends Component {\n\n  state = {\n    meme: meme,\n    defaultMemes: JSON.parse(localStorage.getItem('defaultMemes')) || null,\n    imageName: null\n  }\n\n  randomNumber = max => {\n    return Math.floor(Math.random() * max);\n  }\n\n  setMeme = (meme) => {\n    this.setState({\n      meme: meme,\n    });\n\n  }\n\n  getcustomMeme = (top, bottom, meme, fontSize = '40', font = 'Impact') => {\n    const request = {\n      url: 'http://localhost:8080/meme',\n      method: 'post',\n      data: {\n        top: top,\n        bottom: bottom,\n        meme: meme,\n        fontSize: fontSize,\n        font: font,\n      }\n    }\n\n    axios(request)\n      .then(response => {\n        console.log(response.data);\n        this.setMeme(response.data.url);\n      })\n      .catch(error => {\n\n      })\n  }\n\n  handleForm = (e) => {\n    e.preventDefault();\n    const top = e.target.topText.value;\n    const bottom = e.target.bottomText.value;\n\n    if (this.state.imageName === null) return;\n\n    this.getcustomMeme(top, bottom, this.state.imageName);\n  }\n\n  selectedTitle = name => {\n    this.setState({\n      meme: `https://mywerld.com/images/` + name + '.jpg',\n      imageName: name\n    })\n  }\n\n  render() {\n    if (!this.state.defaultMemes) {\n      this.getImages();\n      return;\n    }\n\n    return (\n      <>\n        <Header />\n        <div className=\"custom\">\n          <img className=\"custom__background\" src={background} />\n          <div className=\"custom__container\">\n            <div className=\"custom__flex-container\">\n              <form className=\"custom__form\" onSubmit={this.handleForm}>\n                <label>\n                  <p className='custom__top-text'>Top Text</p>\n                  <input className=\"custom__input\" type=\"text\" name=\"topText\"></input>\n                </label>\n                <label>\n                  <p className='custom__bottom-text'>Bottom Text</p>\n                  <input className='custom__input' type=\"text\" name=\"bottomText\"></input>\n                </label>\n                <button className=\"custom__meme-button\">CustomMeme</button>\n              </form>\n              <div className=\"custom__meme-container\">\n                <img className=\"custom__meme\" src={this.state.meme} />\n              </div>\n            </div>\n            <div className=\"custom__image-list\">\n              {imageList\n                .sort()\n                .map(imageName => {\n                  return (\n                    <div key={imageName} className=\"custom__image-name\" onClick={() => this.selectedTitle(imageName)}>\n                      <img className=\"custom__star\" src={star} />\n                      <p className=\"custom__image-title\">{imageName}</p>\n                    </div>\n                  )\n                })}\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default customMeme","/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/DropZone/DropZone.js",[],[],"/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/Header/Header.js",["72"],[],"import React from 'react'\nimport \"./Header.scss\"\nimport headerImage from \"../../assets/images/transparent-meme-sized.png\"\nimport {Link} from 'react-router-dom';\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <Link to=\"/\">\n        <img className= \"header__image\" src={headerImage}/>\n      </Link>\n    </div>\n  )\n}\n\nexport default Header",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":8,"nodeType":"79","messageId":"80","endLine":1,"endColumn":12},{"ruleId":"77","severity":1,"message":"81","line":8,"column":8,"nodeType":"79","messageId":"80","endLine":8,"endColumn":25},{"ruleId":"77","severity":1,"message":"82","line":10,"column":8,"nodeType":"79","messageId":"80","endLine":10,"endColumn":14},{"ruleId":"73","replacedBy":"83"},{"ruleId":"75","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":73,"column":21,"nodeType":"87","endLine":73,"endColumn":77},{"ruleId":"85","severity":1,"message":"86","line":87,"column":25,"nodeType":"87","endLine":87,"endColumn":80},{"ruleId":"73","replacedBy":"88"},{"ruleId":"75","replacedBy":"89"},{"ruleId":"85","severity":1,"message":"86","line":197,"column":21,"nodeType":"87","endLine":197,"endColumn":76},{"ruleId":"85","severity":1,"message":"86","line":215,"column":29,"nodeType":"87","endLine":215,"endColumn":109},{"ruleId":"85","severity":1,"message":"86","line":216,"column":29,"nodeType":"87","endLine":216,"endColumn":83},{"ruleId":"85","severity":1,"message":"86","line":79,"column":11,"nodeType":"87","endLine":79,"endColumn":66},{"ruleId":"85","severity":1,"message":"86","line":94,"column":17,"nodeType":"87","endLine":94,"endColumn":71},{"ruleId":"85","severity":1,"message":"86","line":103,"column":23,"nodeType":"87","endLine":103,"endColumn":66},{"ruleId":"85","severity":1,"message":"86","line":10,"column":9,"nodeType":"87","endLine":10,"endColumn":60},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'DropzoneComponent' is defined but never used.","'Header' is defined but never used.",["90"],["91"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["90"],["91"],"no-global-assign","no-unsafe-negation"]