{"ast":null,"code":"var _jsxFileName = \"/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/CustomMeme/CustomMeme.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport meme from \"../../assets/images/meme.jpg\";\nimport './CustomMeme.scss';\nimport background from \"../../assets/images/meme-background.jpg\";\nimport imageList from \"../../assets/data/imageList.json\";\nimport star from \"../../assets/images/star.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class customMeme extends Component {\n  constructor() {\n    var _this;\n\n    super(...arguments);\n    _this = this;\n    this.state = {\n      meme: meme,\n      defaultMemes: JSON.parse(localStorage.getItem('defaultMemes')) || null\n    };\n\n    this.randomNumber = max => {\n      return Math.floor(Math.random() * max);\n    };\n\n    this.setMeme = meme => {\n      this.setState({\n        meme: meme\n      });\n    };\n\n    this.getcustomMeme = function (top, bottom, meme) {\n      let fontSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '40';\n      let font = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'Impact';\n      const request = {\n        url: 'http://localhost:8080/meme',\n        method: 'post',\n        data: {\n          top: top,\n          bottom: bottom,\n          meme: meme,\n          fontSize: fontSize,\n          font: font\n        }\n      };\n      axios(request).then(response => {\n        console.log(response.data);\n\n        _this.setMeme(response.data.url);\n      }).catch(error => {});\n    };\n\n    this.handleForm = e => {\n      e.preventDefault();\n      const top = e.target.topText.value;\n      const bottom = e.target.bottomText.value;\n      const selected = this.randomNumber(this.state.defaultMemes.length);\n      this.getcustomMeme(top, bottom, this.state.defaultMemes[selected]);\n    };\n  }\n\n  render() {\n    if (!this.state.defaultMemes) {\n      this.getImages();\n      return;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"custom__background\",\n        src: background\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"custom__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom__flex-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"custom__form\",\n            onSubmit: this.handleForm,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"custom__top-text\",\n                children: \"Top Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"custom__input\",\n                type: \"text\",\n                name: \"topText\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"custom__bottom-text\",\n                children: \"Bottom Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"custom__input\",\n                type: \"text\",\n                name: \"bottomText\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"custom__meme-button\",\n              children: \"customMeme\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"custom__reset-button\",\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"custom__meme\",\n            src: this.state.meme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom__image-list\",\n          children: imageList.sort().map(imageName => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom__image-name\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"custom__star\",\n                children: \"star\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"custom__image-t\",\n                children: imageName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this)]\n            }, imageName, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default customMeme;","map":{"version":3,"sources":["/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/CustomMeme/CustomMeme.js"],"names":["React","Component","axios","meme","background","imageList","star","customMeme","state","defaultMemes","JSON","parse","localStorage","getItem","randomNumber","max","Math","floor","random","setMeme","setState","getcustomMeme","top","bottom","fontSize","font","request","url","method","data","then","response","console","log","catch","error","handleForm","e","preventDefault","target","topText","value","bottomText","selected","length","render","getImages","sort","map","imageName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport meme from \"../../assets/images/meme.jpg\"\nimport './CustomMeme.scss';\nimport background from \"../../assets/images/meme-background.jpg\";\nimport imageList from \"../../assets/data/imageList.json\";\nimport star from \"../../assets/images/star.svg\"\nexport class customMeme extends Component {\n\n    state = {\n        meme: meme,\n        defaultMemes: JSON.parse(localStorage.getItem('defaultMemes')) || null\n    }\n\n    randomNumber = max => {\n        return Math.floor(Math.random() * max);\n    }\n\n    setMeme = (meme) => {\n        this.setState ({\n            meme: meme,\n        });\n        \n    }\n\n    getcustomMeme = (top, bottom, meme, fontSize = '40', font = 'Impact') => {\n        const request = {\n            url: 'http://localhost:8080/meme',\n            method: 'post',\n            data: {\n                top: top,\n                bottom: bottom,\n                meme: meme,\n                fontSize: fontSize,\n                font: font,\n            }\n        }\n\n        axios(request)\n        .then (response => {\n            console.log (response.data);\n            this.setMeme(response.data.url);\n        })\n        .catch (error => {\n\n        })\n    }\n    \n    handleForm = (e) => {\n      e.preventDefault();\n      const top = e.target.topText.value;\n      const bottom = e.target.bottomText.value;\n      const selected = this.randomNumber(this.state.defaultMemes.length);\n\n      this.getcustomMeme(top, bottom, this.state.defaultMemes[selected]);\n    }\n\n  render() {\n      if (!this.state.defaultMemes) {\n          this.getImages();\n          return;\n      }\n\n    return (\n      <div className=\"custom\">\n          <img className=\"custom__background\" src={background} />\n          <div className=\"custom__container\">\n            <div className=\"custom__flex-container\">\n                <form className=\"custom__form\" onSubmit={this.handleForm}>\n                    <label>\n                        <p className='custom__top-text'>Top Text</p>\n                        <input className=\"custom__input\" type=\"text\" name=\"topText\"></input>\n                    </label>\n                    <label>\n                        <p className='custom__bottom-text'>Bottom Text</p>\n                        <input className='custom__input' type=\"text\" name=\"bottomText\"></input>\n                    </label>\n                    <button className=\"custom__meme-button\">customMeme</button>\n                    <button className=\"custom__reset-button\">Reset</button>\n                </form>\n                <img className=\"custom__meme\" src={this.state.meme}/>\n            </div>\n            <div className=\"custom__image-list\">\n              {imageList\n              .sort() \n              .map(imageName => {\n                return ( \n                  <div key={imageName} className=\"custom__image-name\">\n                    <div className=\"custom__star\">star</div>\n                    <p className=\"custom__image-t\">{imageName}</p>\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n      </div>\n    )\n  }\n}\n\nexport default customMeme"]},"metadata":{},"sourceType":"module"}