{"ast":null,"code":"var _jsxFileName = \"/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/Jokeme/Jokeme.js\";\nimport React, { Component } from 'react';\nimport './Jokeme.scss';\nimport axios from 'axios';\nimport meme from \"../../assets/images/meme.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Jokeme extends Component {\n  constructor() {\n    var _this;\n\n    super();\n    _this = this;\n    this.state = {\n      meme: meme,\n      defaultMemes: JSON.parse(localStorage.getItem('defaultMemes')) || null,\n      categories: JSON.parse(localStorage.getItem('jokeCategories')) || null\n    };\n\n    this.randomNumber = max => {\n      return Math.floor(Math.random() * max);\n    };\n\n    this.setMeme = meme => {\n      this.setState({\n        meme: meme\n      });\n    };\n\n    this.getInstantMeme = function (top, bottom, meme) {\n      let fontSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '40';\n      let font = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'Impact';\n      const request = {\n        url: 'http://localhost:8080/jokeme',\n        method: 'get',\n        params: {\n          top: top,\n          bottom: bottom,\n          meme: meme,\n          fontSize: fontSize,\n          font: font\n        }\n      };\n      axios(request).then(response => {\n        console.log(response.data);\n\n        _this.setMeme(response.data.url);\n      }).catch(error => {});\n    };\n\n    this.handleForm = e => {\n      e.preventDefault();\n      const top = \"top\";\n      const selected = this.randomNumber(this.state.defaultMemes.length);\n      const request = {\n        url: \"https://api.jokes.one/joke/random\",\n        method: \"get\",\n        headers: {\n          \"X-JokesOne-Api-Secret\": \"enhsxyKbfvDs3NM4GUK7sAeF\",\n          \"accept\": \"application/json\",\n          \"content-type\": \"application/json\"\n        }\n      };\n      axios(request).then(response => {\n        const joke = response.data.contents.jokes[0].text;\n        this.getInstantMeme(top, joke, this.state.defaultMemes[selected], \"16\");\n      }).catch(error => {});\n    };\n\n    this.categories = [];\n  }\n\n  getCategories() {\n    let start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    const request = {\n      url: \"https://api.jokes.one/joke/categories/search\",\n      method: 'get',\n      headers: {\n        \"Accept\": \"application/json\",\n        'X-JokesOne-Api-Secret': \"enhsxyKbfvDs3NM4GUK7sAeF\"\n      },\n      params: {\n        query: \"\",\n        start: start\n      }\n    };\n    axios(request).then(response => {\n      const categories = response.data.contents.categories;\n      const filteredCategories = categories.map(category => category.name);\n      filteredCategories.forEach(category => this.categories.push(category));\n      console.log(\"categories\", this.categories);\n    }).catch(error => {});\n  }\n\n  componentDidMount() {\n    this.getCategories(1);\n  }\n\n  render() {\n    if (!this.state.defaultMemes) {\n      this.getImages();\n      return;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jokeme\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.defaultMemes.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleForm,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Top Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"topText\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"InstantMeme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"jokeme__meme\",\n        src: this.state.meme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Jokeme;","map":{"version":3,"sources":["/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/Jokeme/Jokeme.js"],"names":["React","Component","axios","meme","Jokeme","constructor","state","defaultMemes","JSON","parse","localStorage","getItem","categories","randomNumber","max","Math","floor","random","setMeme","setState","getInstantMeme","top","bottom","fontSize","font","request","url","method","params","then","response","console","log","data","catch","error","handleForm","e","preventDefault","selected","length","headers","joke","contents","jokes","text","getCategories","start","query","filteredCategories","map","category","name","forEach","push","componentDidMount","render","getImages"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Jokeme.scss';\nimport axios from 'axios';\nimport meme from \"../../assets/images/meme.jpg\"\n\n\nclass Jokeme extends Component {\n    constructor() {\n        super();\n        this.categories = [];\n    }\n\n    state = {\n        meme: meme,\n        defaultMemes: JSON.parse(localStorage.getItem('defaultMemes')) || null,\n        categories: JSON.parse(localStorage.getItem('jokeCategories')) || null,\n    }\n\n    randomNumber = max => {\n        return Math.floor(Math.random() * max);\n    }\n\n    setMeme = (meme) => {\n        this.setState ({\n            meme: meme,\n        });\n        \n    }\n\n    getInstantMeme = (top, bottom, meme, fontSize = '40', font = 'Impact') => {\n       \n        const request = {\n            url: 'http://localhost:8080/jokeme',\n            method: 'get',\n            params: {\n                top: top,\n                bottom: bottom,\n                meme: meme,\n                fontSize: fontSize,\n                font: font,\n            }\n        }\n\n        axios(request)\n        .then (response => {\n            console.log (response.data);\n            this.setMeme(response.data.url);\n        })\n        .catch (error => {\n\n        })\n    }\n\n    getCategories (start = 1) {\n        const request = {\n            url: \"https://api.jokes.one/joke/categories/search\",\n            method: 'get',\n            headers: {\n                \"Accept\": \"application/json\",\n                'X-JokesOne-Api-Secret': \"enhsxyKbfvDs3NM4GUK7sAeF\",\n            },\n            params: {\n                query:\"\",\n                start: start\n            }\n\n        }\n        axios(request)\n        .then(response => {\n            const categories = response.data.contents.categories;\n            const filteredCategories = categories.map(category => category.name);\n            filteredCategories.forEach(category => this.categories.push(category));\n\n            console.log(\"categories\", this.categories);\n        })\n        .catch(error => {\n\n        });\n    }\n    \n    handleForm = (e) => {\n      e.preventDefault();\n      const top = \"top\";\n      const selected = this.randomNumber(this.state.defaultMemes.length);\n\n      const request = {\n          url: \"https://api.jokes.one/joke/random\",\n          method: \"get\",\n          headers: {\n              \"X-JokesOne-Api-Secret\": \"enhsxyKbfvDs3NM4GUK7sAeF\",\n              \"accept\": \"application/json\",\n              \"content-type\": \"application/json\"\n          }\n      }\n\n      axios(request)\n      .then(response => {\n          const joke = response.data.contents.jokes[0].text;\n          this.getInstantMeme(top, joke, this.state.defaultMemes[selected], \"16\");\n      })\n      .catch(error => {\n\n      });\n    \n    }\n\n    componentDidMount() {\n       this.getCategories(1);\n    }\n\n  render() {\n      if (!this.state.defaultMemes) {\n          this.getImages();\n          return;\n      }\n\n    return (\n      <div className=\"jokeme\">\n          <p>{this.state.defaultMemes.length}</p>\n          <form onSubmit={this.handleForm}>\n              <label>\n                  <p>Top Text</p>\n                  <input type=\"text\" name=\"topText\"></input>\n              </label>\n              <button>InstantMeme</button>\n          </form>\n          <img className=\"jokeme__meme\" src={this.state.meme}/>\n      </div>\n    )\n  }\n}\n\nexport default Jokeme"]},"metadata":{},"sourceType":"module"}