{"ast":null,"code":"var _jsxFileName = \"/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/Jokeme/Jokeme.js\";\nimport React, { Component } from 'react';\nimport './Jokeme.scss';\nimport axios from 'axios';\nimport meme from \"../../assets/images/transparent-meme-sized.png\";\nimport background from \"../../assets/images/meme-background-sized.jpg\";\nimport censoredBanana from \"../../assets/images/censored-banana-sized.jpg\";\nimport Header from '../Header/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Jokeme extends Component {\n  constructor() {\n    var _this;\n\n    super();\n    _this = this;\n    this.state = {\n      meme: meme,\n      defaultMemes: JSON.parse(localStorage.getItem('defaultMemes')) || null,\n      categories: JSON.parse(localStorage.getItem('jokeCategories')) || null,\n      selectedCategory: 'any',\n      nsfw: false\n    };\n\n    this.randomNumber = max => {\n      return Math.floor(Math.random() * max);\n    };\n\n    this.setMeme = meme => {\n      this.setState({\n        meme: meme\n      });\n    };\n\n    this.sortedUniqueArray = array => {\n      const tmpArray = array.sort();\n      let newArray = [];\n      let curValue = null;\n\n      for (let i = 0; i < tmpArray.length; ++i) {\n        if (tmpArray[i] !== curValue && tmpArray[i] !== 'asians') newArray.push(tmpArray[i]);\n        curValue = tmpArray[i];\n      }\n\n      return newArray;\n    };\n\n    this.getInstantMeme = function (top, bottom, meme) {\n      let fontSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '40';\n      let font = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'Impact';\n      const request = {\n        url: 'http://localhost:8080/jokeme',\n        method: 'get',\n        params: {\n          top: top,\n          bottom: bottom,\n          meme: meme,\n          fontSize: fontSize,\n          font: font\n        }\n      };\n      axios(request).then(response => {\n        console.log(response.data);\n\n        _this.setMeme(response.data.url);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleForm = e => {\n      e.preventDefault();\n      const selectedCategory = e.target.categories.value;\n      const top = \"top\";\n      const selected = this.randomNumber(this.state.defaultMemes.length);\n      const request = {\n        url: \"https://api.jokes.one/joke/random\",\n        method: \"get\",\n        headers: {\n          \"X-JokesOne-Api-Secret\": \"enhsxyKbfvDs3NM4GUK7sAeF\",\n          \"accept\": \"application/json\",\n          \"content-type\": \"application/json\"\n        }\n      };\n      axios(request).then(response => {\n        const joke = response.data.contents.jokes[0].text;\n        const isNsfw = this.nsfwCategories.find(category => category === selectedCategory);\n\n        if (isNsfw) {\n          this.setState({\n            selectedCategory: selectedCategory,\n            nsfw: true\n          });\n        } else {\n          this.setState({\n            selectedCategory: selectedCategory,\n            nsfw: false\n          });\n        }\n\n        this.getInstantMeme(top, joke, this.state.defaultMemes[selected], \"16\");\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.uploadCategories = () => {\n      console.log(\"uploadCategories\", this.page);\n\n      if (this.page < 55) {\n        this.getCategories(this.page++);\n      } else {\n        clearInterval(this.interval);\n        this.categories = this.sortedUniqueArray(this.categories);\n        localStorage.setItem('jokeCategories', JSON.stringify(this.categories));\n        this.setState({\n          categories: this.categories\n        });\n      }\n    };\n\n    this.turnOffNsfw = () => {\n      this.setState({\n        nsfw: false\n      });\n    };\n\n    this.page = 1;\n    this.categories = JSON.parse(localStorage.getItem('jokeCategories')) || [];\n\n    if (!this.categories.length) {\n      this.interval = setInterval(this.uploadCategories, 500);\n    }\n\n    this.nsfwCategories = ['asians', 'sex', 'dirty-jokes', 'latinos'];\n  }\n\n  getCategories() {\n    let start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    const request = {\n      url: \"https://api.jokes.one/joke/categories/search\",\n      method: 'get',\n      headers: {\n        \"Accept\": \"application/json\",\n        'X-JokesOne-Api-Secret': \"enhsxyKbfvDs3NM4GUK7sAeF\"\n      },\n      params: {\n        query: \"\",\n        start: start\n      }\n    };\n    axios(request).then(response => {\n      const categories = response.data.contents.categories;\n      let filteredCategories = [];\n\n      if (categories !== null) {\n        filteredCategories = categories.map(category => category.name);\n\n        if (filteredCategories !== null) {\n          filteredCategories.forEach(category => {\n            console.log('getCategories category', category);\n            this.categories.push(category);\n          });\n        }\n      }\n\n      console.log(\"categories\", this.categories);\n    }).catch(error => {\n      console.log('getCategories error', error);\n    });\n  }\n\n  componentDidMount() {}\n\n  render() {\n    if (!this.state.defaultMemes) {\n      this.getImages();\n      return;\n    }\n    /*\n     <select>\n          {options.map((option) => (\n            <option value={option.value}>{option.label}</option>\n          ))}\n        </select>\n      */\n\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jokeme\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"jokeme__background\",\n          src: background\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"instant__container\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"jokeme__form\",\n            onSubmit: this.handleForm,\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"jokeme__select\",\n              name: \"categories\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"any\",\n                children: \"Any\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 33\n              }, this), this.state.categories.map(category => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: category,\n                  children: category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 48\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"jokeme__button\",\n              children: \"Jokeme\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this), this.state.nsfw ? /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"jokeme__meme\",\n            src: censoredBanana,\n            onClick: this.turnOffNsfw\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"jokeme__meme\",\n            src: this.state.meme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Jokeme;","map":{"version":3,"sources":["/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/Jokeme/Jokeme.js"],"names":["React","Component","axios","meme","background","censoredBanana","Header","Jokeme","constructor","state","defaultMemes","JSON","parse","localStorage","getItem","categories","selectedCategory","nsfw","randomNumber","max","Math","floor","random","setMeme","setState","sortedUniqueArray","array","tmpArray","sort","newArray","curValue","i","length","push","getInstantMeme","top","bottom","fontSize","font","request","url","method","params","then","response","console","log","data","catch","error","handleForm","e","preventDefault","target","value","selected","headers","joke","contents","jokes","text","isNsfw","nsfwCategories","find","category","uploadCategories","page","getCategories","clearInterval","interval","setItem","stringify","turnOffNsfw","setInterval","start","query","filteredCategories","map","name","forEach","componentDidMount","render","getImages"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Jokeme.scss';\nimport axios from 'axios';\nimport meme from \"../../assets/images/transparent-meme-sized.png\"\nimport background from \"../../assets/images/meme-background-sized.jpg\";\nimport censoredBanana from \"../../assets/images/censored-banana-sized.jpg\";\nimport Header from '../Header/Header';\n\n\nclass Jokeme extends Component {\n    constructor() {\n        super();\n        this.page = 1;\n        this.categories = JSON.parse(localStorage.getItem('jokeCategories')) || [];\n        if (!this.categories.length) {\n            this.interval = setInterval(this.uploadCategories, 500);\n        }\n        this.nsfwCategories = ['asians', 'sex', 'dirty-jokes', 'latinos'];\n    }\n\n    state = {\n        meme: meme,\n        defaultMemes: JSON.parse(localStorage.getItem('defaultMemes')) || null,\n        categories: JSON.parse(localStorage.getItem('jokeCategories')) || null,\n        selectedCategory: 'any',\n        nsfw: false,\n    }\n\n    randomNumber = max => {\n        return Math.floor(Math.random() * max);\n    }\n\n    setMeme = (meme) => {\n        this.setState({\n            meme: meme,\n        });\n\n    }\n\n    sortedUniqueArray = array => {\n        const tmpArray = array.sort();\n        let newArray = [];\n        let curValue = null;\n        for (let i = 0; i < tmpArray.length; ++i) {\n            if (tmpArray[i] !== curValue && tmpArray[i] !== 'asians') newArray.push(tmpArray[i]);\n            curValue = tmpArray[i];\n        }\n\n        return newArray;\n    }\n\n    getInstantMeme = (top, bottom, meme, fontSize = '40', font = 'Impact') => {\n\n        const request = {\n            url: 'http://localhost:8080/jokeme',\n            method: 'get',\n            params: {\n                top: top,\n                bottom: bottom,\n                meme: meme,\n                fontSize: fontSize,\n                font: font,\n            }\n        }\n\n        axios(request)\n            .then(response => {\n                console.log(response.data);\n                this.setMeme(response.data.url);\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n\n    getCategories(start = 1) {\n        const request = {\n            url: \"https://api.jokes.one/joke/categories/search\",\n            method: 'get',\n            headers: {\n                \"Accept\": \"application/json\",\n                'X-JokesOne-Api-Secret': \"enhsxyKbfvDs3NM4GUK7sAeF\",\n            },\n            params: {\n                query: \"\",\n                start: start\n            }\n\n        }\n        axios(request)\n            .then(response => {\n                const categories = response.data.contents.categories;\n                let filteredCategories = [];\n                if (categories !== null) {\n                    filteredCategories = categories.map(category => category.name);\n                    if (filteredCategories !== null) {\n                        filteredCategories.forEach(category => {\n                            console.log('getCategories category', category);\n                            this.categories.push(category);\n                        });\n                    }\n                }\n                console.log(\"categories\", this.categories);\n            })\n            .catch(error => {\n                console.log('getCategories error', error);\n            });\n    }\n\n    handleForm = (e) => {\n        e.preventDefault();\n        const selectedCategory = e.target.categories.value;\n\n\n        const top = \"top\";\n        const selected = this.randomNumber(this.state.defaultMemes.length);\n\n        const request = {\n            url: \"https://api.jokes.one/joke/random\",\n            method: \"get\",\n            headers: {\n                \"X-JokesOne-Api-Secret\": \"enhsxyKbfvDs3NM4GUK7sAeF\",\n                \"accept\": \"application/json\",\n                \"content-type\": \"application/json\"\n            }\n        }\n\n        axios(request)\n            .then(response => {\n                const joke = response.data.contents.jokes[0].text;\n\n                const isNsfw = this.nsfwCategories.find(category => category === selectedCategory);\n                if (isNsfw) {\n                    this.setState({\n                        selectedCategory: selectedCategory,\n                        nsfw: true\n                    });\n                } else {\n                    this.setState({\n                        selectedCategory: selectedCategory,\n                        nsfw: false\n                    });\n                }\n\n                this.getInstantMeme(top, joke, this.state.defaultMemes[selected], \"16\");\n\n            })\n            .catch(error => {\n                console.log(error)\n            });\n\n    }\n\n    uploadCategories = () => {\n        console.log(\"uploadCategories\", this.page);\n        if (this.page < 55) {\n            this.getCategories(this.page++);\n        } else {\n            clearInterval(this.interval);\n            this.categories = this.sortedUniqueArray(this.categories);\n            localStorage.setItem('jokeCategories', JSON.stringify(this.categories));\n            this.setState({\n                categories: this.categories,\n            })\n\n        }\n    }\n\n    turnOffNsfw = () => {\n        this.setState({\n            nsfw: false\n        })\n    }\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        if (!this.state.defaultMemes) {\n            this.getImages();\n            return;\n        }\n\n        /*\n         <select>\n              {options.map((option) => (\n                <option value={option.value}>{option.label}</option>\n              ))}\n            </select>\n          */\n\n        return (\n            <>\n                <Header />\n                <div className=\"jokeme\">\n                    <img className=\"jokeme__background\" src={background} />\n                    <div className=\"instant__container\">\n                        <form className='jokeme__form' onSubmit={this.handleForm}>\n                            {/* <label className=\"switch\">\n                            <input name=\"nsfw\" type=\"checkbox\" />\n                            <span className=\"slider round\"></span>\n                        </label> */}\n                            <select className='jokeme__select' name='categories'>\n                                <option value={\"any\"}>{\"Any\"}</option>\n                                {\n                                    this.state.categories.map((category) => {\n                                        return <option value={category}>{category}</option>\n                                    })\n                                }\n                            </select>\n                            <button className='jokeme__button'>Jokeme</button>\n                        </form>\n                        {this.state.nsfw ?\n                            <img className=\"jokeme__meme\" src={censoredBanana} onClick={this.turnOffNsfw} /> :\n                            <img className=\"jokeme__meme\" src={this.state.meme} />}\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default Jokeme"]},"metadata":{},"sourceType":"module"}