{"ast":null,"code":"var _jsxFileName = \"/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/InstantMeme/InstantMeme.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './InstantMeme.scss';\nimport meme from \"../../assets/images/meme.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class InstantMeme extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      meme: null,\n      defaultMemes: JSON.parse(localStorage.getItem('defaultMemes')) || null\n    };\n\n    this.getImages = () => {\n      let request = {\n        method: 'GET',\n        url: 'https://ronreiter-meme-generator.p.rapidapi.com/images',\n        headers: {\n          'x-rapidapi-host': 'ronreiter-meme-generator.p.rapidapi.com',\n          'x-rapidapi-key': 'f24c60d820mshb2979420e7a5ac6p149b10jsn4470f1c4ff42'\n        }\n      };\n      axios.request(request).then(function (response) {\n        localStorage.setItem('defaultMemes', JSON.stringify(response.data));\n        console.log(response.data);\n      }).catch(function (error) {\n        console.error(error);\n      });\n    };\n\n    this.randomNumber = max => {\n      return Math.floor(Math.random() * max);\n    };\n\n    this.getInstantMeme = (top, bottom, meme) => {};\n\n    this.handleForm = e => {\n      e.preventDefault();\n      const top = e.target.topText.value;\n      const bottom = e.target.bottomText.value;\n      const selected = this.randomNumber(this.state.defaultMemes.length);\n      this.getInstantMeme(top, bottom, this.state.defaultMemes[selected]);\n    };\n  }\n\n  render() {\n    if (!this.state.defaultMemes) {\n      this.getImages();\n      return;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.defaultMemes.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleForm,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Top Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"topText\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Bottom Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"bottomText\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"InstantMeme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default InstantMeme;","map":{"version":3,"sources":["/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/InstantMeme/InstantMeme.js"],"names":["React","Component","axios","meme","InstantMeme","state","defaultMemes","JSON","parse","localStorage","getItem","getImages","request","method","url","headers","then","response","setItem","stringify","data","console","log","catch","error","randomNumber","max","Math","floor","random","getInstantMeme","top","bottom","handleForm","e","preventDefault","target","topText","value","bottomText","selected","length","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,IAAP,MAAiB,8BAAjB;;AAEA,OAAO,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEvCI,KAFuC,GAE/B;AACJF,MAAAA,IAAI,EAAE,IADF;AAEJG,MAAAA,YAAY,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,KAAoD;AAF9D,KAF+B;;AAAA,SAOzCC,SAPyC,GAO7B,MAAM;AAChB,UAAIC,OAAO,GACX;AACIC,QAAAA,MAAM,EAAE,KADZ;AAEIC,QAAAA,GAAG,EAAE,wDAFT;AAGIC,QAAAA,OAAO,EAAE;AACL,6BAAmB,yCADd;AAEL,4BAAkB;AAFb;AAHb,OADA;AAUAb,MAAAA,KAAK,CAACU,OAAN,CAAcA,OAAd,EACCI,IADD,CACM,UAAUC,QAAV,EAAoB;AACtBR,QAAAA,YAAY,CAACS,OAAb,CAAqB,cAArB,EAAqCX,IAAI,CAACY,SAAL,CAAeF,QAAQ,CAACG,IAAxB,CAArC;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACG,IAArB;AACH,OAJD,EAKCG,KALD,CAKO,UAAUC,KAAV,EAAiB;AACpBH,QAAAA,OAAO,CAACG,KAAR,CAAcA,KAAd;AACH,OAPD;AAQC,KA1BsC;;AAAA,SA4BvCC,YA5BuC,GA4BxBC,GAAG,IAAI;AAClB,aAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,GAA3B,CAAP;AACH,KA9BsC;;AAAA,SAgCvCI,cAhCuC,GAgCtB,CAACC,GAAD,EAAMC,MAAN,EAAc7B,IAAd,KAAuB,CAEvC,CAlCsC;;AAAA,SAoCvC8B,UApCuC,GAoCzBC,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMJ,GAAG,GAAGG,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiBC,KAA7B;AACA,YAAMN,MAAM,GAAGE,CAAC,CAACE,MAAF,CAASG,UAAT,CAAoBD,KAAnC;AACA,YAAME,QAAQ,GAAG,KAAKf,YAAL,CAAkB,KAAKpB,KAAL,CAAWC,YAAX,CAAwBmC,MAA1C,CAAjB;AAEA,WAAKX,cAAL,CAAoBC,GAApB,EAAyBC,MAAzB,EAAiC,KAAK3B,KAAL,CAAWC,YAAX,CAAwBkC,QAAxB,CAAjC;AACD,KA3CsC;AAAA;;AA6CzCE,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKrC,KAAL,CAAWC,YAAhB,EAA8B;AAC1B,WAAKK,SAAL;AACA;AACH;;AAEH,wBACE;AAAA,8BACI;AAAA,kBAAI,KAAKN,KAAL,CAAWC,YAAX,CAAwBmC;AAA5B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,QAAQ,EAAE,KAAKR,UAArB;AAAA,gCACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAaI;AAAK,QAAA,GAAG,EAAE9B;AAAV;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AApEwC;AAuE3C,eAAeC,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './InstantMeme.scss';\nimport meme from \"../../assets/images/meme.jpg\"\n\nexport class InstantMeme extends Component {\n\n    state = {\n        meme: null,\n        defaultMemes: JSON.parse(localStorage.getItem('defaultMemes')) || null\n    }\n\n  getImages = () => {\n    let request = \n    {\n        method: 'GET',\n        url: 'https://ronreiter-meme-generator.p.rapidapi.com/images',\n        headers: {\n            'x-rapidapi-host': 'ronreiter-meme-generator.p.rapidapi.com',\n            'x-rapidapi-key': 'f24c60d820mshb2979420e7a5ac6p149b10jsn4470f1c4ff42'\n        }\n    };\n\n    axios.request(request)\n    .then(function (response) {\n        localStorage.setItem('defaultMemes', JSON.stringify(response.data));\n        console.log(response.data);\n    })\n    .catch(function (error) {\n        console.error(error);\n    });\n    }\n\n    randomNumber = max => {\n        return Math.floor(Math.random() * max);\n    }\n\n    getInstantMeme = (top, bottom, meme) => {\n\n    }\n    \n    handleForm = (e) => {\n      e.preventDefault();\n      const top = e.target.topText.value;\n      const bottom = e.target.bottomText.value;\n      const selected = this.randomNumber(this.state.defaultMemes.length);\n\n      this.getInstantMeme(top, bottom, this.state.defaultMemes[selected]);\n    }\n\n  render() {\n      if (!this.state.defaultMemes) {\n          this.getImages();\n          return;\n      }\n\n    return (\n      <div>\n          <p>{this.state.defaultMemes.length}</p>\n          <form onSubmit={this.handleForm}>\n              <label>\n                  <p>Top Text</p>\n                  <input type=\"text\" name=\"topText\"></input>\n              </label>\n              <label>\n                  <p>Bottom Text</p>\n                  <input type=\"text\" name=\"bottomText\"></input>\n              </label>\n              <button>InstantMeme</button>\n          </form>\n          <img src={meme}/>\n      </div>\n    )\n  }\n}\n\nexport default InstantMeme"]},"metadata":{},"sourceType":"module"}