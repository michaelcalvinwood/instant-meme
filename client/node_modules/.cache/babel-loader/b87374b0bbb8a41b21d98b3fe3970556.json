{"ast":null,"code":"var _jsxFileName = \"/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/Jokeme/Jokeme.js\";\nimport React, { Component } from 'react';\nimport './Jokeme.scss';\nimport axios from 'axios';\nimport meme from \"../../assets/images/meme.jpg\";\nimport background from \"../../assets/images/meme-background.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Jokeme extends Component {\n  constructor() {\n    var _this;\n\n    super();\n    _this = this;\n    this.state = {\n      meme: meme,\n      defaultMemes: JSON.parse(localStorage.getItem('defaultMemes')) || null,\n      categories: JSON.parse(localStorage.getItem('jokeCategories')) || null\n    };\n\n    this.randomNumber = max => {\n      return Math.floor(Math.random() * max);\n    };\n\n    this.setMeme = meme => {\n      this.setState({\n        meme: meme\n      });\n    };\n\n    this.getInstantMeme = function (top, bottom, meme) {\n      let fontSize = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '40';\n      let font = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'Impact';\n      const request = {\n        url: 'http://localhost:8080/jokeme',\n        method: 'get',\n        params: {\n          top: top,\n          bottom: bottom,\n          meme: meme,\n          fontSize: fontSize,\n          font: font\n        }\n      };\n      axios(request).then(response => {\n        console.log(response.data);\n\n        _this.setMeme(response.data.url);\n      }).catch(error => {});\n    };\n\n    this.handleForm = e => {\n      e.preventDefault();\n      const top = \"top\";\n      const selected = this.randomNumber(this.state.defaultMemes.length);\n      const request = {\n        url: \"https://api.jokes.one/joke/random\",\n        method: \"get\",\n        headers: {\n          \"X-JokesOne-Api-Secret\": \"enhsxyKbfvDs3NM4GUK7sAeF\",\n          \"accept\": \"application/json\",\n          \"content-type\": \"application/json\"\n        }\n      };\n      axios(request).then(response => {\n        const joke = response.data.contents.jokes[0].text;\n        this.getInstantMeme(top, joke, this.state.defaultMemes[selected], \"16\");\n      }).catch(error => {});\n    };\n\n    this.uploadCategories = () => {\n      console.log(\"uploadCategories\", this.page);\n\n      if (this.page < 55) {\n        this.getCategories(this.page++);\n      } else {\n        clearInterval(this.interval);\n        localStorage.setItem('jokeCategories', JSON.stringify(this.categories));\n        this.setState({\n          categories: this.categories\n        });\n      }\n    };\n\n    this.page = 1;\n    this.categories = JSON.parse(localStorage.getItem('jokeCategories')) || [];\n\n    if (!this.categories.length) {\n      this.interval = setInterval(this.uploadCategories, 500);\n    }\n  }\n\n  getCategories() {\n    let start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    const request = {\n      url: \"https://api.jokes.one/joke/categories/search\",\n      method: 'get',\n      headers: {\n        \"Accept\": \"application/json\",\n        'X-JokesOne-Api-Secret': \"enhsxyKbfvDs3NM4GUK7sAeF\"\n      },\n      params: {\n        query: \"\",\n        start: start\n      }\n    };\n    axios(request).then(response => {\n      const categories = response.data.contents.categories;\n      let filteredCategories = [];\n\n      if (categories !== null) {\n        filteredCategories = categories.map(category => category.name);\n\n        if (filteredCategories !== null) {\n          filteredCategories.forEach(category => {\n            console.log('getCategories category', category);\n            this.categories.push(category);\n          });\n        }\n      }\n\n      console.log(\"categories\", this.categories);\n    }).catch(error => {\n      console.log('getCategories error', error);\n    });\n  }\n\n  componentDidMount() {}\n\n  render() {\n    if (!this.state.defaultMemes) {\n      this.getImages();\n      return;\n    }\n    /*\n     <select>\n          {options.map((option) => (\n            <option value={option.value}>{option.label}</option>\n          ))}\n        </select>\n      */\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jokeme\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"jokeme__background\",\n        src: background\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instant__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.defaultMemes.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"jokeme__form\",\n          onSubmit: this.handleForm,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Top Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"jokeme__input\",\n              type: \"text\",\n              name: \"topText\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"jokeme__select\",\n            name: \"categories\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"any\",\n              children: \"Any\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this), this.state.categories.map(category => {\n              /*#__PURE__*/\n              _jsxDEV(\"option\", {\n                value: category,\n                children: category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"switch\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"slider round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"jokeme__button\",\n            children: \"InstantMeme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"jokeme__meme\",\n          src: this.state.meme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Jokeme;","map":{"version":3,"sources":["/Users/michaelwood/Desktop/brainstation/code/pair-programming/client/src/components/Jokeme/Jokeme.js"],"names":["React","Component","axios","meme","background","Jokeme","constructor","state","defaultMemes","JSON","parse","localStorage","getItem","categories","randomNumber","max","Math","floor","random","setMeme","setState","getInstantMeme","top","bottom","fontSize","font","request","url","method","params","then","response","console","log","data","catch","error","handleForm","e","preventDefault","selected","length","headers","joke","contents","jokes","text","uploadCategories","page","getCategories","clearInterval","interval","setItem","stringify","setInterval","start","query","filteredCategories","map","category","name","forEach","push","componentDidMount","render","getImages"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Jokeme.scss';\nimport axios from 'axios';\nimport meme from \"../../assets/images/meme.jpg\"\nimport background from \"../../assets/images/meme-background.jpg\";\n\n\nclass Jokeme extends Component {\n    constructor() {\n        super();\n        this.page = 1;\n        this.categories = JSON.parse(localStorage.getItem('jokeCategories')) || [];\n        if (!this.categories.length) {\n            this.interval = setInterval(this.uploadCategories, 500);\n        }\n    }\n\n    state = {\n        meme: meme,\n        defaultMemes: JSON.parse(localStorage.getItem('defaultMemes')) || null,\n        categories: JSON.parse(localStorage.getItem('jokeCategories')) || null,\n    }\n\n    randomNumber = max => {\n        return Math.floor(Math.random() * max);\n    }\n\n    setMeme = (meme) => {\n        this.setState({\n            meme: meme,\n        });\n\n    }\n\n    getInstantMeme = (top, bottom, meme, fontSize = '40', font = 'Impact') => {\n\n        const request = {\n            url: 'http://localhost:8080/jokeme',\n            method: 'get',\n            params: {\n                top: top,\n                bottom: bottom,\n                meme: meme,\n                fontSize: fontSize,\n                font: font,\n            }\n        }\n\n        axios(request)\n            .then(response => {\n                console.log(response.data);\n                this.setMeme(response.data.url);\n            })\n            .catch(error => {\n\n            })\n    }\n\n    getCategories(start = 1) {\n        const request = {\n            url: \"https://api.jokes.one/joke/categories/search\",\n            method: 'get',\n            headers: {\n                \"Accept\": \"application/json\",\n                'X-JokesOne-Api-Secret': \"enhsxyKbfvDs3NM4GUK7sAeF\",\n            },\n            params: {\n                query: \"\",\n                start: start\n            }\n\n        }\n        axios(request)\n            .then(response => {\n                const categories = response.data.contents.categories;\n                let filteredCategories = [];\n                if (categories !== null) {\n                    filteredCategories = categories.map(category => category.name);\n                    if (filteredCategories !== null) {\n                        filteredCategories.forEach(category => {\n                            console.log('getCategories category', category);\n                            this.categories.push(category);\n                        });\n                    }\n                }\n                console.log(\"categories\", this.categories);\n            })\n            .catch(error => {\n                console.log('getCategories error', error);\n            });\n    }\n\n    handleForm = (e) => {\n        e.preventDefault();\n        const top = \"top\";\n        const selected = this.randomNumber(this.state.defaultMemes.length);\n\n        const request = {\n            url: \"https://api.jokes.one/joke/random\",\n            method: \"get\",\n            headers: {\n                \"X-JokesOne-Api-Secret\": \"enhsxyKbfvDs3NM4GUK7sAeF\",\n                \"accept\": \"application/json\",\n                \"content-type\": \"application/json\"\n            }\n        }\n\n        axios(request)\n            .then(response => {\n                const joke = response.data.contents.jokes[0].text;\n                this.getInstantMeme(top, joke, this.state.defaultMemes[selected], \"16\");\n            })\n            .catch(error => {\n\n            });\n\n    }\n\n    uploadCategories = () => {\n        console.log(\"uploadCategories\", this.page);\n        if (this.page < 55) {\n            this.getCategories(this.page++);\n        } else {\n            clearInterval(this.interval);\n            localStorage.setItem('jokeCategories', JSON.stringify(this.categories));\n            this.setState({\n                categories: this.categories,\n            })\n        }\n    }\n\n    componentDidMount() {\n\n    }\n\n    render() {\n        if (!this.state.defaultMemes) {\n            this.getImages();\n            return;\n        }\n\n        /*\n         <select>\n              {options.map((option) => (\n                <option value={option.value}>{option.label}</option>\n              ))}\n            </select>\n          */\n\n        return (\n            <div className=\"jokeme\">\n                <img className=\"jokeme__background\" src={background} />\n                <div className=\"instant__container\">\n                    <p>{this.state.defaultMemes.length}</p>\n                    <form className='jokeme__form' onSubmit={this.handleForm}>\n                        <label>\n                            <p>Top Text</p>\n                            <input className='jokeme__input' type=\"text\" name=\"topText\"></input>\n                        </label>\n                        <select className='jokeme__select' name='categories'>\n                            <option value={\"any\"}>{\"Any\"}</option>\n                            {\n                                this.state.categories.map((category) => {\n                                    <option value={category}>{category}</option>\n                                })\n                            }\n                        </select>\n                        <label class=\"switch\">\n                            <input type=\"checkbox\" />\n                                <span class=\"slider round\"></span>\n                        </label>\n                        <button className='jokeme__button'>InstantMeme</button>\n                    </form>\n                    <img className=\"jokeme__meme\" src={this.state.meme} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Jokeme"]},"metadata":{},"sourceType":"module"}